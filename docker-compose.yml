name: my-deploy-sample
services:
  web:
    container_name: app-service-container
    build:
      dockerfile: Dockerfile
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - postgres
    env_file: .env
    environment:
      NODE_ENV: production
      DB_HOST: db-service-container
  postgres:
    image: postgres:latest
    container_name: db-service-container
    env_file: .env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
        -c shared_buffers=256MB
        -c effective_cache_size=768MB
        -c maintenance_work_mem=64MB
        -c checkpoint_completion_target=0.7
        -c wal_buffers=16MB
        -c default_statistics_target=100
    healthcheck:
      test: [
        "CMD-SHELL",
        "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"
      ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
volumes:
  pgdata:
    driver: local
